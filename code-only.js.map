{
  "version": 3,
  "sources": ["../../../../../nix/store/vn4ycga4sysja6k1388rvraxhy047cpf-node-dependencies-cubical-1lab-1.0.0/lib/node_modules/graphemesplit/types.js", "../../../../../nix/store/vn4ycga4sysja6k1388rvraxhy047cpf-node-dependencies-cubical-1lab-1.0.0/lib/node_modules/tiny-inflate/index.js", "../../../../../nix/store/vn4ycga4sysja6k1388rvraxhy047cpf-node-dependencies-cubical-1lab-1.0.0/lib/node_modules/unicode-trie/swap.js", "../../../../../nix/store/vn4ycga4sysja6k1388rvraxhy047cpf-node-dependencies-cubical-1lab-1.0.0/lib/node_modules/unicode-trie/index.js", "../../../../../nix/store/vn4ycga4sysja6k1388rvraxhy047cpf-node-dependencies-cubical-1lab-1.0.0/lib/node_modules/js-base64/base64.js", "../../../../../nix/store/vn4ycga4sysja6k1388rvraxhy047cpf-node-dependencies-cubical-1lab-1.0.0/lib/node_modules/graphemesplit/index.js", "../../support/web/js/equations.ts", "../../support/web/js/highlight-hover.ts", "../../../../../nix/store/vn4ycga4sysja6k1388rvraxhy047cpf-node-dependencies-cubical-1lab-1.0.0/lib/node_modules/fast-fuzzy/lib/fuzzy.mjs", "../../support/web/js/lib/jsx.ts", "../../support/web/js/search.tsx"],
  "sourcesContent": ["module.exports = {\n  Other: 0,\n  CR: 1 << 0,\n  LF: 1 << 1,\n  Control: 1 << 2,\n  Extend: 1 << 3,\n  ZWJ: 1 << 4,\n  Regional_Indicator: 1 << 5,\n  Prepend: 1 << 6,\n  SpacingMark: 1 << 7,\n  L: 1 << 8,\n  V: 1 << 9,\n  T: 1 << 10,\n  LV: 1 << 11,\n  LVT: 1 << 12,\n  Extended_Pictographic: 1 << 13,\n};\n", "var TINF_OK = 0;\nvar TINF_DATA_ERROR = -3;\n\nfunction Tree() {\n  this.table = new Uint16Array(16);   /* table of code length counts */\n  this.trans = new Uint16Array(288);  /* code -> symbol translation table */\n}\n\nfunction Data(source, dest) {\n  this.source = source;\n  this.sourceIndex = 0;\n  this.tag = 0;\n  this.bitcount = 0;\n  \n  this.dest = dest;\n  this.destLen = 0;\n  \n  this.ltree = new Tree();  /* dynamic length/symbol tree */\n  this.dtree = new Tree();  /* dynamic distance tree */\n}\n\n/* --------------------------------------------------- *\n * -- uninitialized global data (static structures) -- *\n * --------------------------------------------------- */\n\nvar sltree = new Tree();\nvar sdtree = new Tree();\n\n/* extra bits and base tables for length codes */\nvar length_bits = new Uint8Array(30);\nvar length_base = new Uint16Array(30);\n\n/* extra bits and base tables for distance codes */\nvar dist_bits = new Uint8Array(30);\nvar dist_base = new Uint16Array(30);\n\n/* special ordering of code length codes */\nvar clcidx = new Uint8Array([\n  16, 17, 18, 0, 8, 7, 9, 6,\n  10, 5, 11, 4, 12, 3, 13, 2,\n  14, 1, 15\n]);\n\n/* used by tinf_decode_trees, avoids allocations every call */\nvar code_tree = new Tree();\nvar lengths = new Uint8Array(288 + 32);\n\n/* ----------------------- *\n * -- utility functions -- *\n * ----------------------- */\n\n/* build extra bits and base tables */\nfunction tinf_build_bits_base(bits, base, delta, first) {\n  var i, sum;\n\n  /* build bits table */\n  for (i = 0; i < delta; ++i) bits[i] = 0;\n  for (i = 0; i < 30 - delta; ++i) bits[i + delta] = i / delta | 0;\n\n  /* build base table */\n  for (sum = first, i = 0; i < 30; ++i) {\n    base[i] = sum;\n    sum += 1 << bits[i];\n  }\n}\n\n/* build the fixed huffman trees */\nfunction tinf_build_fixed_trees(lt, dt) {\n  var i;\n\n  /* build fixed length tree */\n  for (i = 0; i < 7; ++i) lt.table[i] = 0;\n\n  lt.table[7] = 24;\n  lt.table[8] = 152;\n  lt.table[9] = 112;\n\n  for (i = 0; i < 24; ++i) lt.trans[i] = 256 + i;\n  for (i = 0; i < 144; ++i) lt.trans[24 + i] = i;\n  for (i = 0; i < 8; ++i) lt.trans[24 + 144 + i] = 280 + i;\n  for (i = 0; i < 112; ++i) lt.trans[24 + 144 + 8 + i] = 144 + i;\n\n  /* build fixed distance tree */\n  for (i = 0; i < 5; ++i) dt.table[i] = 0;\n\n  dt.table[5] = 32;\n\n  for (i = 0; i < 32; ++i) dt.trans[i] = i;\n}\n\n/* given an array of code lengths, build a tree */\nvar offs = new Uint16Array(16);\n\nfunction tinf_build_tree(t, lengths, off, num) {\n  var i, sum;\n\n  /* clear code length count table */\n  for (i = 0; i < 16; ++i) t.table[i] = 0;\n\n  /* scan symbol lengths, and sum code length counts */\n  for (i = 0; i < num; ++i) t.table[lengths[off + i]]++;\n\n  t.table[0] = 0;\n\n  /* compute offset table for distribution sort */\n  for (sum = 0, i = 0; i < 16; ++i) {\n    offs[i] = sum;\n    sum += t.table[i];\n  }\n\n  /* create code->symbol translation table (symbols sorted by code) */\n  for (i = 0; i < num; ++i) {\n    if (lengths[off + i]) t.trans[offs[lengths[off + i]]++] = i;\n  }\n}\n\n/* ---------------------- *\n * -- decode functions -- *\n * ---------------------- */\n\n/* get one bit from source stream */\nfunction tinf_getbit(d) {\n  /* check if tag is empty */\n  if (!d.bitcount--) {\n    /* load next tag */\n    d.tag = d.source[d.sourceIndex++];\n    d.bitcount = 7;\n  }\n\n  /* shift bit out of tag */\n  var bit = d.tag & 1;\n  d.tag >>>= 1;\n\n  return bit;\n}\n\n/* read a num bit value from a stream and add base */\nfunction tinf_read_bits(d, num, base) {\n  if (!num)\n    return base;\n\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n\n  var val = d.tag & (0xffff >>> (16 - num));\n  d.tag >>>= num;\n  d.bitcount -= num;\n  return val + base;\n}\n\n/* given a data stream and a tree, decode a symbol */\nfunction tinf_decode_symbol(d, t) {\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n  \n  var sum = 0, cur = 0, len = 0;\n  var tag = d.tag;\n\n  /* get more bits while code value is above sum */\n  do {\n    cur = 2 * cur + (tag & 1);\n    tag >>>= 1;\n    ++len;\n\n    sum += t.table[len];\n    cur -= t.table[len];\n  } while (cur >= 0);\n  \n  d.tag = tag;\n  d.bitcount -= len;\n\n  return t.trans[sum + cur];\n}\n\n/* given a data stream, decode dynamic trees from it */\nfunction tinf_decode_trees(d, lt, dt) {\n  var hlit, hdist, hclen;\n  var i, num, length;\n\n  /* get 5 bits HLIT (257-286) */\n  hlit = tinf_read_bits(d, 5, 257);\n\n  /* get 5 bits HDIST (1-32) */\n  hdist = tinf_read_bits(d, 5, 1);\n\n  /* get 4 bits HCLEN (4-19) */\n  hclen = tinf_read_bits(d, 4, 4);\n\n  for (i = 0; i < 19; ++i) lengths[i] = 0;\n\n  /* read code lengths for code length alphabet */\n  for (i = 0; i < hclen; ++i) {\n    /* get 3 bits code length (0-7) */\n    var clen = tinf_read_bits(d, 3, 0);\n    lengths[clcidx[i]] = clen;\n  }\n\n  /* build code length tree */\n  tinf_build_tree(code_tree, lengths, 0, 19);\n\n  /* decode code lengths for the dynamic trees */\n  for (num = 0; num < hlit + hdist;) {\n    var sym = tinf_decode_symbol(d, code_tree);\n\n    switch (sym) {\n      case 16:\n        /* copy previous code length 3-6 times (read 2 bits) */\n        var prev = lengths[num - 1];\n        for (length = tinf_read_bits(d, 2, 3); length; --length) {\n          lengths[num++] = prev;\n        }\n        break;\n      case 17:\n        /* repeat code length 0 for 3-10 times (read 3 bits) */\n        for (length = tinf_read_bits(d, 3, 3); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      case 18:\n        /* repeat code length 0 for 11-138 times (read 7 bits) */\n        for (length = tinf_read_bits(d, 7, 11); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      default:\n        /* values 0-15 represent the actual code lengths */\n        lengths[num++] = sym;\n        break;\n    }\n  }\n\n  /* build dynamic trees */\n  tinf_build_tree(lt, lengths, 0, hlit);\n  tinf_build_tree(dt, lengths, hlit, hdist);\n}\n\n/* ----------------------------- *\n * -- block inflate functions -- *\n * ----------------------------- */\n\n/* given a stream and two trees, inflate a block of data */\nfunction tinf_inflate_block_data(d, lt, dt) {\n  while (1) {\n    var sym = tinf_decode_symbol(d, lt);\n\n    /* check for end of block */\n    if (sym === 256) {\n      return TINF_OK;\n    }\n\n    if (sym < 256) {\n      d.dest[d.destLen++] = sym;\n    } else {\n      var length, dist, offs;\n      var i;\n\n      sym -= 257;\n\n      /* possibly get more bits from length code */\n      length = tinf_read_bits(d, length_bits[sym], length_base[sym]);\n\n      dist = tinf_decode_symbol(d, dt);\n\n      /* possibly get more bits from distance code */\n      offs = d.destLen - tinf_read_bits(d, dist_bits[dist], dist_base[dist]);\n\n      /* copy match */\n      for (i = offs; i < offs + length; ++i) {\n        d.dest[d.destLen++] = d.dest[i];\n      }\n    }\n  }\n}\n\n/* inflate an uncompressed block of data */\nfunction tinf_inflate_uncompressed_block(d) {\n  var length, invlength;\n  var i;\n  \n  /* unread from bitbuffer */\n  while (d.bitcount > 8) {\n    d.sourceIndex--;\n    d.bitcount -= 8;\n  }\n\n  /* get length */\n  length = d.source[d.sourceIndex + 1];\n  length = 256 * length + d.source[d.sourceIndex];\n\n  /* get one's complement of length */\n  invlength = d.source[d.sourceIndex + 3];\n  invlength = 256 * invlength + d.source[d.sourceIndex + 2];\n\n  /* check length */\n  if (length !== (~invlength & 0x0000ffff))\n    return TINF_DATA_ERROR;\n\n  d.sourceIndex += 4;\n\n  /* copy block */\n  for (i = length; i; --i)\n    d.dest[d.destLen++] = d.source[d.sourceIndex++];\n\n  /* make sure we start next block on a byte boundary */\n  d.bitcount = 0;\n\n  return TINF_OK;\n}\n\n/* inflate stream from source to dest */\nfunction tinf_uncompress(source, dest) {\n  var d = new Data(source, dest);\n  var bfinal, btype, res;\n\n  do {\n    /* read final block flag */\n    bfinal = tinf_getbit(d);\n\n    /* read block type (2 bits) */\n    btype = tinf_read_bits(d, 2, 0);\n\n    /* decompress block */\n    switch (btype) {\n      case 0:\n        /* decompress uncompressed block */\n        res = tinf_inflate_uncompressed_block(d);\n        break;\n      case 1:\n        /* decompress block with fixed huffman trees */\n        res = tinf_inflate_block_data(d, sltree, sdtree);\n        break;\n      case 2:\n        /* decompress block with dynamic huffman trees */\n        tinf_decode_trees(d, d.ltree, d.dtree);\n        res = tinf_inflate_block_data(d, d.ltree, d.dtree);\n        break;\n      default:\n        res = TINF_DATA_ERROR;\n    }\n\n    if (res !== TINF_OK)\n      throw new Error('Data error');\n\n  } while (!bfinal);\n\n  if (d.destLen < d.dest.length) {\n    if (typeof d.dest.slice === 'function')\n      return d.dest.slice(0, d.destLen);\n    else\n      return d.dest.subarray(0, d.destLen);\n  }\n  \n  return d.dest;\n}\n\n/* -------------------- *\n * -- initialization -- *\n * -------------------- */\n\n/* build fixed huffman trees */\ntinf_build_fixed_trees(sltree, sdtree);\n\n/* build extra bits and base tables */\ntinf_build_bits_base(length_bits, length_base, 4, 3);\ntinf_build_bits_base(dist_bits, dist_base, 2, 1);\n\n/* fix a special case */\nlength_bits[28] = 0;\nlength_base[28] = 258;\n\nmodule.exports = tinf_uncompress;\n", "const isBigEndian = (new Uint8Array(new Uint32Array([0x12345678]).buffer)[0] === 0x12);\n\nconst swap = (b, n, m) => {\n  let i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n};\n\nconst swap32 = array => {\n  const len = array.length;\n  for (let i = 0; i < len; i += 4) {\n    swap(array, i, i + 3);\n    swap(array, i + 1, i + 2);\n  }\n};\n\nconst swap32LE = array => {\n  if (isBigEndian) {\n    swap32(array);\n  }\n};\n\nmodule.exports = {\n  swap32LE: swap32LE\n};\n", "const inflate = require('tiny-inflate');\nconst { swap32LE } = require('./swap');\n\n// Shift size for getting the index-1 table offset.\nconst SHIFT_1 = 6 + 5;\n\n// Shift size for getting the index-2 table offset.\nconst SHIFT_2 = 5;\n\n// Difference between the two shift sizes,\n// for getting an index-1 offset from an index-2 offset. 6=11-5\nconst SHIFT_1_2 = SHIFT_1 - SHIFT_2;\n\n// Number of index-1 entries for the BMP. 32=0x20\n// This part of the index-1 table is omitted from the serialized form.\nconst OMITTED_BMP_INDEX_1_LENGTH = 0x10000 >> SHIFT_1;\n\n// Number of entries in an index-2 block. 64=0x40\nconst INDEX_2_BLOCK_LENGTH = 1 << SHIFT_1_2;\n\n// Mask for getting the lower bits for the in-index-2-block offset. */\nconst INDEX_2_MASK = INDEX_2_BLOCK_LENGTH - 1;\n\n// Shift size for shifting left the index array values.\n// Increases possible data size with 16-bit index values at the cost\n// of compactability.\n// This requires data blocks to be aligned by DATA_GRANULARITY.\nconst INDEX_SHIFT = 2;\n\n// Number of entries in a data block. 32=0x20\nconst DATA_BLOCK_LENGTH = 1 << SHIFT_2;\n\n// Mask for getting the lower bits for the in-data-block offset.\nconst DATA_MASK = DATA_BLOCK_LENGTH - 1;\n\n// The part of the index-2 table for U+D800..U+DBFF stores values for\n// lead surrogate code _units_ not code _points_.\n// Values for lead surrogate code _points_ are indexed with this portion of the table.\n// Length=32=0x20=0x400>>SHIFT_2. (There are 1024=0x400 lead surrogates.)\nconst LSCP_INDEX_2_OFFSET = 0x10000 >> SHIFT_2;\nconst LSCP_INDEX_2_LENGTH = 0x400 >> SHIFT_2;\n\n// Count the lengths of both BMP pieces. 2080=0x820\nconst INDEX_2_BMP_LENGTH = LSCP_INDEX_2_OFFSET + LSCP_INDEX_2_LENGTH;\n\n// The 2-byte UTF-8 version of the index-2 table follows at offset 2080=0x820.\n// Length 32=0x20 for lead bytes C0..DF, regardless of SHIFT_2.\nconst UTF8_2B_INDEX_2_OFFSET = INDEX_2_BMP_LENGTH;\nconst UTF8_2B_INDEX_2_LENGTH = 0x800 >> 6;  // U+0800 is the first code point after 2-byte UTF-8\n\n// The index-1 table, only used for supplementary code points, at offset 2112=0x840.\n// Variable length, for code points up to highStart, where the last single-value range starts.\n// Maximum length 512=0x200=0x100000>>SHIFT_1.\n// (For 0x100000 supplementary code points U+10000..U+10ffff.)\n//\n// The part of the index-2 table for supplementary code points starts\n// after this index-1 table.\n//\n// Both the index-1 table and the following part of the index-2 table\n// are omitted completely if there is only BMP data.\nconst INDEX_1_OFFSET = UTF8_2B_INDEX_2_OFFSET + UTF8_2B_INDEX_2_LENGTH;\n\n// The alignment size of a data block. Also the granularity for compaction.\nconst DATA_GRANULARITY = 1 << INDEX_SHIFT;\n\nclass UnicodeTrie {\n  constructor(data) {\n    const isBuffer = (typeof data.readUInt32BE === 'function') && (typeof data.slice === 'function');\n\n    if (isBuffer || data instanceof Uint8Array) {\n      // read binary format\n      let uncompressedLength;\n      if (isBuffer) {\n        this.highStart = data.readUInt32LE(0);\n        this.errorValue = data.readUInt32LE(4);\n        uncompressedLength = data.readUInt32LE(8);\n        data = data.slice(12);\n      } else {\n        const view = new DataView(data.buffer);\n        this.highStart = view.getUint32(0, true);\n        this.errorValue = view.getUint32(4, true);\n        uncompressedLength = view.getUint32(8, true);\n        data = data.subarray(12);\n      }\n\n      // double inflate the actual trie data\n      data = inflate(data, new Uint8Array(uncompressedLength));\n      data = inflate(data, new Uint8Array(uncompressedLength));\n\n      // swap bytes from little-endian\n      swap32LE(data);\n\n      this.data = new Uint32Array(data.buffer);\n\n    } else {\n      // pre-parsed data\n      ({ data: this.data, highStart: this.highStart, errorValue: this.errorValue } = data);\n    }\n  }\n\n  get(codePoint) {\n    let index;\n    if ((codePoint < 0) || (codePoint > 0x10ffff)) {\n      return this.errorValue;\n    }\n\n    if ((codePoint < 0xd800) || ((codePoint > 0xdbff) && (codePoint <= 0xffff))) {\n      // Ordinary BMP code point, excluding leading surrogates.\n      // BMP uses a single level lookup.  BMP index starts at offset 0 in the index.\n      // data is stored in the index array itself.\n      index = (this.data[codePoint >> SHIFT_2] << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n\n    if (codePoint <= 0xffff) {\n      // Lead Surrogate Code Point.  A Separate index section is stored for\n      // lead surrogate code units and code points.\n      //   The main index has the code unit data.\n      //   For this function, we need the code point data.\n      index = (this.data[LSCP_INDEX_2_OFFSET + ((codePoint - 0xd800) >> SHIFT_2)] << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n\n    if (codePoint < this.highStart) {\n      // Supplemental code point, use two-level lookup.\n      index = this.data[(INDEX_1_OFFSET - OMITTED_BMP_INDEX_1_LENGTH) + (codePoint >> SHIFT_1)];\n      index = this.data[index + ((codePoint >> SHIFT_2) & INDEX_2_MASK)];\n      index = (index << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n\n    return this.data[this.data.length - DATA_GRANULARITY];\n  }\n}\n\nmodule.exports = UnicodeTrie;", "//\n// THIS FILE IS AUTOMATICALLY GENERATED! DO NOT EDIT BY HAND!\n//\n;\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? module.exports = factory()\n        : typeof define === 'function' && define.amd\n            ? define(factory) :\n            // cf. https://github.com/dankogai/js-base64/issues/119\n            (function () {\n                // existing version for noConflict()\n                var _Base64 = global.Base64;\n                var gBase64 = factory();\n                gBase64.noConflict = function () {\n                    global.Base64 = _Base64;\n                    return gBase64;\n                };\n                if (global.Meteor) { // Meteor.js\n                    Base64 = gBase64;\n                }\n                global.Base64 = gBase64;\n            })();\n}((typeof self !== 'undefined' ? self\n    : typeof window !== 'undefined' ? window\n        : typeof global !== 'undefined' ? global\n            : this), function () {\n    'use strict';\n    /**\n     *  base64.ts\n     *\n     *  Licensed under the BSD 3-Clause License.\n     *    http://opensource.org/licenses/BSD-3-Clause\n     *\n     *  References:\n     *    http://en.wikipedia.org/wiki/Base64\n     *\n     * @author Dan Kogai (https://github.com/dankogai)\n     */\n    var version = '3.7.2';\n    /**\n     * @deprecated use lowercase `version`.\n     */\n    var VERSION = version;\n    var _hasatob = typeof atob === 'function';\n    var _hasbtoa = typeof btoa === 'function';\n    var _hasBuffer = typeof Buffer === 'function';\n    var _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\n    var _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\n    var b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var b64chs = Array.prototype.slice.call(b64ch);\n    var b64tab = (function (a) {\n        var tab = {};\n        a.forEach(function (c, i) { return tab[c] = i; });\n        return tab;\n    })(b64chs);\n    var b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\n    var _fromCC = String.fromCharCode.bind(String);\n    var _U8Afrom = typeof Uint8Array.from === 'function'\n        ? Uint8Array.from.bind(Uint8Array)\n        : function (it, fn) {\n            if (fn === void 0) { fn = function (x) { return x; }; }\n            return new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));\n        };\n    var _mkUriSafe = function (src) { return src\n        .replace(/=/g, '').replace(/[+\\/]/g, function (m0) { return m0 == '+' ? '-' : '_'; }); };\n    var _tidyB64 = function (s) { return s.replace(/[^A-Za-z0-9\\+\\/]/g, ''); };\n    /**\n     * polyfill version of `btoa`\n     */\n    var btoaPolyfill = function (bin) {\n        // console.log('polyfilled');\n        var u32, c0, c1, c2, asc = '';\n        var pad = bin.length % 3;\n        for (var i = 0; i < bin.length;) {\n            if ((c0 = bin.charCodeAt(i++)) > 255 ||\n                (c1 = bin.charCodeAt(i++)) > 255 ||\n                (c2 = bin.charCodeAt(i++)) > 255)\n                throw new TypeError('invalid character found');\n            u32 = (c0 << 16) | (c1 << 8) | c2;\n            asc += b64chs[u32 >> 18 & 63]\n                + b64chs[u32 >> 12 & 63]\n                + b64chs[u32 >> 6 & 63]\n                + b64chs[u32 & 63];\n        }\n        return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n    };\n    /**\n     * does what `window.btoa` of web browsers do.\n     * @param {String} bin binary string\n     * @returns {string} Base64-encoded string\n     */\n    var _btoa = _hasbtoa ? function (bin) { return btoa(bin); }\n        : _hasBuffer ? function (bin) { return Buffer.from(bin, 'binary').toString('base64'); }\n            : btoaPolyfill;\n    var _fromUint8Array = _hasBuffer\n        ? function (u8a) { return Buffer.from(u8a).toString('base64'); }\n        : function (u8a) {\n            // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n            var maxargs = 0x1000;\n            var strs = [];\n            for (var i = 0, l = u8a.length; i < l; i += maxargs) {\n                strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n            }\n            return _btoa(strs.join(''));\n        };\n    /**\n     * converts a Uint8Array to a Base64 string.\n     * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 \u00A75\n     * @returns {string} Base64 string\n     */\n    var fromUint8Array = function (u8a, urlsafe) {\n        if (urlsafe === void 0) { urlsafe = false; }\n        return urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n    };\n    // This trick is found broken https://github.com/dankogai/js-base64/issues/130\n    // const utob = (src: string) => unescape(encodeURIComponent(src));\n    // reverting good old fationed regexp\n    var cb_utob = function (c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                    + _fromCC(0x80 | (cc & 0x3f)))\n                    : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                        + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                        + _fromCC(0x80 | (cc & 0x3f)));\n        }\n        else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n                + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n                + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                + _fromCC(0x80 | (cc & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    /**\n     * @deprecated should have been internal use only.\n     * @param {string} src UTF-8 string\n     * @returns {string} UTF-16 string\n     */\n    var utob = function (u) { return u.replace(re_utob, cb_utob); };\n    //\n    var _encode = _hasBuffer\n        ? function (s) { return Buffer.from(s, 'utf8').toString('base64'); }\n        : _TE\n            ? function (s) { return _fromUint8Array(_TE.encode(s)); }\n            : function (s) { return _btoa(utob(s)); };\n    /**\n     * converts a UTF-8-encoded string to a Base64 string.\n     * @param {boolean} [urlsafe] if `true` make the result URL-safe\n     * @returns {string} Base64 string\n     */\n    var encode = function (src, urlsafe) {\n        if (urlsafe === void 0) { urlsafe = false; }\n        return urlsafe\n            ? _mkUriSafe(_encode(src))\n            : _encode(src);\n    };\n    /**\n     * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 \u00A75.\n     * @returns {string} Base64 string\n     */\n    var encodeURI = function (src) { return encode(src, true); };\n    // This trick is found broken https://github.com/dankogai/js-base64/issues/130\n    // const btou = (src: string) => decodeURIComponent(escape(src));\n    // reverting good old fationed regexp\n    var re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\n    var cb_btou = function (cccc) {\n        switch (cccc.length) {\n            case 4:\n                var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                    | ((0x3f & cccc.charCodeAt(1)) << 12)\n                    | ((0x3f & cccc.charCodeAt(2)) << 6)\n                    | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n                return (_fromCC((offset >>> 10) + 0xD800)\n                    + _fromCC((offset & 0x3FF) + 0xDC00));\n            case 3:\n                return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    | (0x3f & cccc.charCodeAt(2)));\n            default:\n                return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                    | (0x3f & cccc.charCodeAt(1)));\n        }\n    };\n    /**\n     * @deprecated should have been internal use only.\n     * @param {string} src UTF-16 string\n     * @returns {string} UTF-8 string\n     */\n    var btou = function (b) { return b.replace(re_btou, cb_btou); };\n    /**\n     * polyfill version of `atob`\n     */\n    var atobPolyfill = function (asc) {\n        // console.log('polyfilled');\n        asc = asc.replace(/\\s+/g, '');\n        if (!b64re.test(asc))\n            throw new TypeError('malformed base64.');\n        asc += '=='.slice(2 - (asc.length & 3));\n        var u24, bin = '', r1, r2;\n        for (var i = 0; i < asc.length;) {\n            u24 = b64tab[asc.charAt(i++)] << 18\n                | b64tab[asc.charAt(i++)] << 12\n                | (r1 = b64tab[asc.charAt(i++)]) << 6\n                | (r2 = b64tab[asc.charAt(i++)]);\n            bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n                : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                    : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n        }\n        return bin;\n    };\n    /**\n     * does what `window.atob` of web browsers do.\n     * @param {String} asc Base64-encoded string\n     * @returns {string} binary string\n     */\n    var _atob = _hasatob ? function (asc) { return atob(_tidyB64(asc)); }\n        : _hasBuffer ? function (asc) { return Buffer.from(asc, 'base64').toString('binary'); }\n            : atobPolyfill;\n    //\n    var _toUint8Array = _hasBuffer\n        ? function (a) { return _U8Afrom(Buffer.from(a, 'base64')); }\n        : function (a) { return _U8Afrom(_atob(a), function (c) { return c.charCodeAt(0); }); };\n    /**\n     * converts a Base64 string to a Uint8Array.\n     */\n    var toUint8Array = function (a) { return _toUint8Array(_unURI(a)); };\n    //\n    var _decode = _hasBuffer\n        ? function (a) { return Buffer.from(a, 'base64').toString('utf8'); }\n        : _TD\n            ? function (a) { return _TD.decode(_toUint8Array(a)); }\n            : function (a) { return btou(_atob(a)); };\n    var _unURI = function (a) { return _tidyB64(a.replace(/[-_]/g, function (m0) { return m0 == '-' ? '+' : '/'; })); };\n    /**\n     * converts a Base64 string to a UTF-8 string.\n     * @param {String} src Base64 string.  Both normal and URL-safe are supported\n     * @returns {string} UTF-8 string\n     */\n    var decode = function (src) { return _decode(_unURI(src)); };\n    /**\n     * check if a value is a valid Base64 string\n     * @param {String} src a value to check\n      */\n    var isValid = function (src) {\n        if (typeof src !== 'string')\n            return false;\n        var s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n        return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n    };\n    //\n    var _noEnum = function (v) {\n        return {\n            value: v, enumerable: false, writable: true, configurable: true\n        };\n    };\n    /**\n     * extend String.prototype with relevant methods\n     */\n    var extendString = function () {\n        var _add = function (name, body) { return Object.defineProperty(String.prototype, name, _noEnum(body)); };\n        _add('fromBase64', function () { return decode(this); });\n        _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n        _add('toBase64URI', function () { return encode(this, true); });\n        _add('toBase64URL', function () { return encode(this, true); });\n        _add('toUint8Array', function () { return toUint8Array(this); });\n    };\n    /**\n     * extend Uint8Array.prototype with relevant methods\n     */\n    var extendUint8Array = function () {\n        var _add = function (name, body) { return Object.defineProperty(Uint8Array.prototype, name, _noEnum(body)); };\n        _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n        _add('toBase64URI', function () { return fromUint8Array(this, true); });\n        _add('toBase64URL', function () { return fromUint8Array(this, true); });\n    };\n    /**\n     * extend Builtin prototypes with relevant methods\n     */\n    var extendBuiltins = function () {\n        extendString();\n        extendUint8Array();\n    };\n    var gBase64 = {\n        version: version,\n        VERSION: VERSION,\n        atob: _atob,\n        atobPolyfill: atobPolyfill,\n        btoa: _btoa,\n        btoaPolyfill: btoaPolyfill,\n        fromBase64: decode,\n        toBase64: encode,\n        encode: encode,\n        encodeURI: encodeURI,\n        encodeURL: encodeURI,\n        utob: utob,\n        btou: btou,\n        decode: decode,\n        isValid: isValid,\n        fromUint8Array: fromUint8Array,\n        toUint8Array: toUint8Array,\n        extendString: extendString,\n        extendUint8Array: extendUint8Array,\n        extendBuiltins: extendBuiltins\n    };\n    //\n    // export Base64 to the namespace\n    //\n    // ES5 is yet to have Object.assign() that may make transpilers unhappy.\n    // gBase64.Base64 = Object.assign({}, gBase64);\n    gBase64.Base64 = {};\n    Object.keys(gBase64).forEach(function (k) { return gBase64.Base64[k] = gBase64[k]; });\n    return gBase64;\n}));\n", "const types = require(\"./types\");\nconst typeTrieData = require(\"./typeTrie.json\").data;\nconst extPictData = require(\"./extPict.json\").data;\n\nconst UnicodeTrie = require(\"unicode-trie\");\nconst Base64 = require(\"js-base64\").Base64;\n\nconst typeTrie = new UnicodeTrie(Base64.toUint8Array(typeTrieData));\nconst extPict = new UnicodeTrie(Base64.toUint8Array(extPictData));\n\nfunction is(type, bit) {\n  return (type & bit) !== 0;\n}\n\nconst GB11State = {\n  Initial: 0,\n  ExtendOrZWJ: 1,\n  NotBoundary: 2,\n};\n\nfunction nextGraphemeClusterSize(ts, start) {\n  const L = ts.length;\n\n  let ri = 0;\n  let gb11State = GB11State.Initial;\n\n  // GB1: sot \u00F7 Any\n  for (let i = start; i + 1 < L; i++) {\n    const curr = ts[i + 0];\n    const next = ts[i + 1];\n\n    // for GB12, GB13\n    if (!is(curr, types.Regional_Indicator)) {\n      ri = 0;\n    }\n\n    // for GB11: \\p{Extended_Pictographic} Extend* ZWJ x \\p{Extended_Pictographic}\n    switch (gb11State) {\n      case GB11State.NotBoundary:\n      case GB11State.Initial:\n        if (is(curr, types.Extended_Pictographic)) {\n          gb11State = GB11State.ExtendOrZWJ;\n        } else {\n          gb11State = GB11State.Initial;\n        }\n        break;\n      case GB11State.ExtendOrZWJ:\n        if (is(curr, types.Extend)) {\n          gb11State = GB11State.ExtendOrZWJ;\n        } else if (\n          is(curr, types.ZWJ) &&\n          is(next, types.Extended_Pictographic)\n        ) {\n          gb11State = GB11State.NotBoundary;\n        } else {\n          gb11State = GB11State.Initial;\n        }\n        break;\n    }\n\n    // GB3: CR x LF\n    if (is(curr, types.CR) && is(next, types.LF)) {\n      continue;\n    }\n    // GB4: (Control | CR | LF) \u00F7\n    if (is(curr, types.Control | types.CR | types.LF)) {\n      return i + 1 - start;\n    }\n    // GB5: \u00F7 (Control | CR | LF)\n    if (is(next, types.Control | types.CR | types.LF)) {\n      return i + 1 - start;\n    }\n    // GB6: L x (L | V | LV | LVT)\n    if (\n      is(curr, types.L) &&\n      is(next, types.L | types.V | types.LV | types.LVT)\n    ) {\n      continue;\n    }\n    // GB7: (LV | V) x (V | T)\n    if (is(curr, types.LV | types.V) && is(next, types.V | types.T)) {\n      continue;\n    }\n    // GB8: (LVT | T) x T\n    if (is(curr, types.LVT | types.T) && is(next, types.T)) {\n      continue;\n    }\n    // GB9: x (Extend | ZWJ)\n    if (is(next, types.Extend | types.ZWJ)) {\n      continue;\n    }\n    // GB9a: x SpacingMark\n    if (is(next, types.SpacingMark)) {\n      continue;\n    }\n    // GB9b: Prepend x\n    if (is(curr, types.Prepend)) {\n      continue;\n    }\n    // GB11: \\p{Extended_Pictographic} Extend* ZWJ x \\p{Extended_Pictographic}\n    if (gb11State === GB11State.NotBoundary) {\n      continue;\n    }\n    // GB12: sot (RI RI)* RI x RI\n    // GB13: [^RI] (RI RI)* RI x RI\n    if (\n      is(curr, types.Regional_Indicator) &&\n      is(next, types.Regional_Indicator) &&\n      ri % 2 === 0\n    ) {\n      ri++;\n      continue;\n    }\n    // GB999: Any \u00F7 Any\n    return i + 1 - start;\n  }\n  // GB2: Any \u00F7 eot\n  return L - start;\n}\n\nmodule.exports = function split(str) {\n  const graphemeClusters = [];\n\n  const map = [0];\n  const ts = [];\n  for (let i = 0; i < str.length; ) {\n    const code = str.codePointAt(i);\n    ts.push(typeTrie.get(code) | extPict.get(code));\n    i += code > 65535 ? 2 : 1;\n    map.push(i);\n  }\n\n  for (let offset = 0; offset < ts.length; ) {\n    const size = nextGraphemeClusterSize(ts, offset);\n    const start = map[offset];\n    const end = map[offset + size];\n    graphemeClusters.push(str.slice(start, end));\n    offset += size;\n  }\n\n  return graphemeClusters;\n};\n", "const lsItem = \"1lab.eqn_display\";\nlet equations_displayed = false;\nif (window.localStorage.getItem(lsItem) === \"displayed\") {\n  equations_displayed = true;\n}\n\nconst sfItem = \"1lab.serif_font\";\nlet serif_font = false;\nif (window.localStorage.getItem(sfItem) === \"displayed\") {\n  serif_font = true;\n}\n\nconst saveEqnDisplay = () => {\n  window.localStorage.setItem(lsItem, equations_displayed ? \"displayed\" : \"hidden\");\n};\n\nconst saveFontDisplay = () => {\n  window.localStorage.setItem(sfItem, serif_font ? \"displayed\" : \"hidden\");\n};\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  const buttons: NodeListOf<HTMLInputElement> = document.querySelectorAll(\"input.equations\");\n  const body = document.body;\n\n  if (equations_displayed) {\n    body.classList.add(\"show-equations\");\n  } else {\n    body.classList.remove(\"show-equations\");\n  }\n\n  if (serif_font) {\n    body.classList.remove(\"sans-serif\");\n  } else {\n    body.classList.add(\"sans-serif\");\n  }\n\n  buttons.forEach(button => {\n    if (!button.classList.contains(\"narrow-only\")) {\n      button.style.display = \"block\";\n    }\n\n    if (button.checked !== undefined) button.checked = equations_displayed;\n\n    button.onclick = () => {\n      equations_displayed = !equations_displayed;\n\n      if (equations_displayed) {\n        body.classList.add(\"show-equations\");\n      } else {\n        body.classList.remove(\"show-equations\");\n      }\n\n      saveEqnDisplay();\n\n      buttons.forEach((button) => {\n        if (button.checked !== undefined) button.checked = equations_displayed;\n\n        if (equations_displayed) {\n          button.innerText = \"Hide equations\";\n        } else {\n          button.innerText = \"Show equations\";\n        }\n      });\n    };\n  });\n\n  const toggleFont = document.getElementById(\"toggle-fonts\") as HTMLInputElement | null;\n  if (toggleFont) {\n    toggleFont.checked = serif_font;\n    toggleFont.onclick = () => {\n      serif_font = toggleFont.checked;\n\n      if (serif_font) {\n        body.classList.remove(\"sans-serif\");\n      } else {\n        body.classList.add(\"sans-serif\");\n      }\n\n      saveFontDisplay();\n    };\n  }\n});\n\nexport { };\n", "// Copyright 2002-2010, Simon Marlow.  All rights reserved.\n// https://github.com/haskell/haddock/blob/ghc-8.8/LICENSE\n// Slightly modified by Tesla Ice Zhang\n\nlet links: Array<HTMLAnchorElement> = [];\n\nlet currentHover: HTMLDivElement | null = null;\n\nconst highlight = (self: HTMLAnchorElement, on: boolean) => () => {\n  const type = self.getAttribute(\"data-type\");\n  if (type) {\n    if (currentHover) {\n      currentHover.remove();\n      currentHover = null;\n    }\n\n    if (on) {\n      currentHover = document.createElement(\"div\");\n      currentHover.innerText = type;\n      currentHover.classList.add(\"typeTooltip\", \"sourceCode\");\n      document.body.appendChild(currentHover);\n\n      const selfRect = self.getBoundingClientRect();\n      const hoverRect = currentHover.getBoundingClientRect();\n      // If we're close to the bottom of the page, push the tooltip above instead.\n      // The constant here is arbitrary, because trying to convert em to px in JS is a fool's errand.\n      if (selfRect.bottom + hoverRect.height + 30 > window.innerHeight) {\n        // 2em from the material mixin. I'm sorry\n        currentHover.style.top = `calc(${self.offsetTop - hoverRect.height}px - 2em`;\n      } else {\n        currentHover.style.top = `${self.offsetTop + self.offsetHeight}px`;\n      }\n      currentHover.style.left = `${self.offsetLeft}px`;\n    }\n  }\n\n\n  links.forEach(that => {\n    if (self.href != that.href) {\n      return;\n    }\n\n    if (on) {\n      that.classList.add(\"hover-highlight\");\n    } else {\n      that.classList.remove(\"hover-highlight\");\n    }\n  });\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  links = Array.from(document.getElementsByTagName(\"a\"));\n  links.forEach(link => {\n    if (link.hasAttribute(\"href\")) {\n      link.onmouseover = highlight(link, true);\n      link.onmouseout = highlight(link, false);\n    }\n  });\n});\n\nexport {};\n", "import split from 'graphemesplit';\n\nconst whitespaceRegex = /^\\s+$/;\nconst nonWordRegex = /^[`~!@#$%^&*()\\-=_+{}[\\]\\|\\\\;':\",./<>?]+$/;\nconst sortKind = {\n  insertOrder: \"insertOrder\",\n  bestMatch: \"bestMatch\"\n}; // the default options, which will be used for any unset option\n\nconst defaultOptions = {\n  keySelector: s => s,\n  threshold: .6,\n  ignoreCase: true,\n  ignoreSymbols: true,\n  normalizeWhitespace: true,\n  returnMatchData: false,\n  useDamerau: true,\n  useSellers: true,\n  sortBy: sortKind.bestMatch\n};\n\nconst noop = () => {};\n\nconst arrayWrap = item => item instanceof Array ? item : [item]; // return normalized string, with map included\n\n\nfunction normalize(string, options) {\n  const lower = options.ignoreCase ? string.toLocaleLowerCase() : string; // track transformations\n\n  const normal = [];\n  const map = [];\n  let lastWasWhitespace = true;\n  let length = 0;\n\n  for (const grapheme of split(lower)) {\n    whitespaceRegex.lastIndex = 0;\n    nonWordRegex.lastIndex = 0;\n\n    if (options.normalizeWhitespace && whitespaceRegex.test(grapheme)) {\n      if (!lastWasWhitespace) {\n        normal.push(\" \");\n        map.push(length);\n        lastWasWhitespace = true;\n      }\n    } else if (!(options.ignoreSymbols && nonWordRegex.test(grapheme))) {\n      normal.push(grapheme.normalize());\n      map.push(length);\n      lastWasWhitespace = false;\n    }\n\n    length += grapheme.length;\n  } // add the end of the string\n\n\n  map.push(string.length);\n\n  while (normal[normal.length - 1] === \" \") {\n    normal.pop();\n    map.pop();\n  }\n\n  return {\n    original: string,\n    normal,\n    map\n  };\n} // translates a match to the original string\n\n\nfunction denormalizeMatchPosition(match, map) {\n  return {\n    index: map[match.start],\n    length: map[match.end + 1] - map[match.start]\n  };\n} // walks back up the matrix to find the match index and length\n\n\nfunction walkBack(rows, scoreIndex) {\n  if (scoreIndex === 0) {\n    return {\n      index: 0,\n      length: 0\n    };\n  }\n\n  let start = scoreIndex;\n\n  for (let i = rows.length - 2; i > 0 && start > 1; i--) {\n    const row = rows[i];\n    start = row[start] < row[start - 1] ? start : start - 1;\n  }\n\n  return {\n    start: start - 1,\n    end: scoreIndex - 1\n  };\n} // walkback is a noop for non-sellers, but should still return an object\n\n\nfunction noopWalkback() {\n  return {\n    start: 0,\n    end: 0\n  };\n}\n\nconst levUpdateScore = () => true;\n\nconst sellersUpdateScore = (cur, min) => cur < min;\n\nfunction getLevScore(rows, length) {\n  const lastRow = rows[rows.length - 1];\n  const lastCell = lastRow[length - 1];\n  const scoreLength = Math.max(rows.length, length);\n  return {\n    score: 1 - lastCell / (scoreLength - 1),\n    scoreIndex: length - 1\n  };\n}\n\nfunction getSellersScore(rows, length) {\n  // search term was empty string, return perfect score\n  if (rows.length === 1) {\n    return {\n      score: 1,\n      scoreIndex: 0\n    };\n  }\n\n  const lastRow = rows[rows.length - 1];\n  let minValue = lastRow[0];\n  let minIndex = 0;\n\n  for (let i = 1; i < length; i++) {\n    const val = lastRow[i];\n\n    if (val < minValue) {\n      minValue = val;\n      minIndex = i;\n    }\n  }\n\n  return {\n    score: 1 - minValue / (rows.length - 1),\n    scoreIndex: minIndex\n  };\n}\n\nfunction initLevRows(rowCount, columnCount) {\n  const rows = new Array(rowCount);\n\n  for (let i = 0; i < rowCount; i++) {\n    rows[i] = new Array(columnCount);\n    rows[i][0] = i;\n  }\n\n  for (let i = 0; i < columnCount; i++) {\n    rows[0][i] = i;\n  }\n\n  return rows;\n}\n\nfunction initSellersRows(rowCount, columnCount) {\n  const rows = new Array(rowCount);\n  rows[0] = new Array(columnCount).fill(0);\n\n  for (let i = 1; i < rowCount; i++) {\n    rows[i] = new Array(columnCount);\n    rows[i][0] = i;\n  }\n\n  return rows;\n} // the content of the innermost loop of levenshtein\n\n\nfunction levCore(term, candidate, rows, i, j) {\n  const rowA = rows[i];\n  const rowB = rows[i + 1];\n  const cost = term[i] === candidate[j] ? 0 : 1;\n  let m;\n  let min = rowB[j] + 1; // insertion\n\n  if ((m = rowA[j + 1] + 1) < min) min = m; // deletion\n\n  if ((m = rowA[j] + cost) < min) min = m; // substitution\n\n  rowB[j + 1] = min;\n} // runtime complexity: O(mn) where m and n are the lengths of term and candidate, respectively\n// Note: this method only runs on a single column\n\n\nfunction levenshtein(term, candidate, rows, j) {\n  for (let i = 0; i < term.length; i++) {\n    levCore(term, candidate, rows, i, j);\n  }\n} // has all the runtime characteristics of the above, but punishes transpositions less,\n// resulting in better tolerance to those types of typos\n// Note: this method only runs on a single column\n\n\nfunction damerauLevenshtein(term, candidate, rows, j) {\n  // if j === 0, we can't check for transpositions,\n  // so use normal levenshtein instead\n  if (j === 0) {\n    levenshtein(term, candidate, rows, j);\n    return;\n  } // for i === 0, we also can't check for transpositions, so calculate\n  // the first row using normal levenshtein as well\n\n\n  if (term.length > 0) {\n    levCore(term, candidate, rows, 0, j);\n  }\n\n  for (let i = 1; i < term.length; i++) {\n    const rowA = rows[i - 1];\n    const rowB = rows[i];\n    const rowC = rows[i + 1];\n    const cost = term[i] === candidate[j] ? 0 : 1;\n    let m; // insertion\n\n    let min = rowC[j] + 1; // deletion\n\n    if ((m = rowB[j + 1] + 1) < min) min = m; // substitution\n\n    if ((m = rowB[j] + cost) < min) min = m; // transposition\n\n    if (term[i] === candidate[j - 1] && term[i - 1] === candidate[j] && (m = rowA[j - 1] + cost) < min) min = m;\n    rowC[j + 1] = min;\n  }\n} // method for creating a trie from search candidates\n// using a trie can significantly improve search time\n\n\nfunction trieInsert(trie, string, item) {\n  let walker = trie;\n\n  for (let i = 0; i < string.length; i++) {\n    const char = string[i]; // add child node if not already present\n\n    if (walker.children[char] == null) {\n      walker.children[char] = {\n        children: {},\n        candidates: [],\n        depth: 0\n      };\n    } // log max depth of this subtree\n\n\n    walker.depth = Math.max(walker.depth, string.length - i); // step into child node\n\n    walker = walker.children[char];\n  }\n\n  walker.candidates.push(item);\n} // transforms a list of candidates into objects with normalized search keys,\n// and inserts them into a trie\n// the keySelector is used to pick strings from an object to search by\n\n\nfunction createSearchTrie(trie, index, items, options) {\n  for (const item of items) {\n    const candidates = arrayWrap(options.keySelector(item)).map((key, keyIndex) => ({\n      index,\n      keyIndex,\n      item,\n      normalized: normalize(key, options)\n    }));\n    index++;\n\n    for (const candidate of candidates) {\n      trieInsert(trie, candidate.normalized.normal, candidate);\n    }\n  }\n} // scored item comparator\n\n\nfunction compareItemsBestScore(a, b) {\n  // highest priority is raw levenshtein score\n  const scoreDiff = b.score - a.score;\n\n  if (scoreDiff !== 0) {\n    return scoreDiff;\n  } // ties are broken by earlier match positions\n\n\n  const matchPosDiff = a.match.start - b.match.start;\n\n  if (matchPosDiff !== 0) {\n    return matchPosDiff;\n  } // prioritize earlier keys\n\n\n  const keyIndexDiff = a.keyIndex - b.keyIndex;\n\n  if (keyIndexDiff !== 0) {\n    return keyIndexDiff;\n  } // lastly, break ties by preferring the closer length match\n\n\n  const lengthDiff = a.lengthDiff - b.lengthDiff;\n\n  if (lengthDiff !== 0) {\n    return lengthDiff;\n  } // if all else fails, resort to insertion order\n\n\n  return compareItemsInsertOrder(a, b);\n}\n\nfunction compareItemsInsertOrder(a, b) {\n  return a.index - b.index;\n}\n\nfunction getCompareFunc(sortBy) {\n  switch (sortBy) {\n    case sortKind.bestMatch:\n      return compareItemsBestScore;\n\n    case sortKind.insertOrder:\n      return compareItemsInsertOrder;\n\n    default:\n      throw new Error(`unknown sortBy method ${sortBy}`);\n  }\n} // dedupes and adds results to the results list/map\n\n\nfunction addResult(results, resultMap, candidate, score, match, lengthDiff, compareItems) {\n  const scoredItem = {\n    item: candidate.item,\n    normalized: candidate.normalized,\n    score,\n    match,\n    index: candidate.index,\n    keyIndex: candidate.keyIndex,\n    lengthDiff\n  };\n\n  if (resultMap[candidate.index] == null) {\n    resultMap[candidate.index] = results.length;\n    results.push(scoredItem);\n  } else if (compareItems(scoredItem, results[resultMap[candidate.index]]) < 0) {\n    results[resultMap[candidate.index]] = scoredItem;\n  }\n}\n\nconst getLevLength = Math.max;\n\nconst getSellersLength = termLength => termLength; // skip any subtrees for which it is impossible to score >= threshold\n\n\nfunction levShouldContinue(node, pos, term, threshold, sValue) {\n  // earliest point (length) at which sValue could return to 0\n  const p1 = pos + sValue; // point (length) at which string lengths would match\n\n  const p2 = Math.min(term.length, pos + node.depth + 1); // the best score possible is the string which minimizes the value\n  // max(sValue, strLenDiff), which is always halfway between p1 and p2\n\n  const length = Math.ceil((p1 + p2) / 2);\n  const bestPossibleValue = length - p2;\n  return 1 - bestPossibleValue / length >= threshold;\n}\n\nfunction sellersShouldContinue(node, _, term, threshold, sValue, lastValue) {\n  const bestPossibleValue = Math.min(sValue, lastValue - (node.depth + 1));\n  return 1 - bestPossibleValue / term.length >= threshold;\n} // (pseudo) recursively walk the trie\n\n\nfunction searchRecurse(trie, term, scoreMethods, rows, results, resultMap, options) {\n  const stack = [];\n\n  for (const key in trie.children) {\n    const node = trie.children[key];\n    stack.push([node, 1, key, 0, term.length]);\n  }\n\n  const acc = new Array(trie.depth);\n\n  while (stack.length !== 0) {\n    const [node, len, char, si, sv] = stack.pop();\n    acc[len - 1] = char; // build rows\n\n    scoreMethods.score(term, acc, rows, len - 1); // track best score and position\n\n    const lastIndex = len;\n    const lastValue = rows[rows.length - 1][lastIndex];\n    let sIndex = si,\n        sValue = sv;\n\n    if (scoreMethods.shouldUpdateScore(lastValue, sv)) {\n      sIndex = lastIndex;\n      sValue = lastValue;\n    } // insert results\n\n\n    if (node.candidates.length > 0) {\n      const length = scoreMethods.getLength(term.length, len);\n      const score = 1 - sValue / length;\n\n      if (score >= options.threshold) {\n        const match = walkBack(rows, sIndex);\n        const lengthDiff = Math.abs(len - term.length);\n\n        for (const candidate of node.candidates) {\n          addResult(results, resultMap, candidate, score, match, lengthDiff, scoreMethods.compareItems);\n        }\n      }\n    } // recurse for children\n\n\n    for (const key in node.children) {\n      const child = node.children[key];\n\n      if (scoreMethods.shouldContinue(child, len, term, options.threshold, sValue, lastValue)) {\n        stack.push([child, len + 1, key, sIndex, sValue]);\n      }\n    }\n  }\n} // the core match finder: returns a sorted, filtered list of matches\n// this does not normalize input, requiring users to normalize themselves\n\n\nfunction searchCore(term, trie, options) {\n  const initMethod = options.useSellers ? initSellersRows : initLevRows;\n  const scoreMethods = {\n    score: options.useDamerau ? damerauLevenshtein : levenshtein,\n    getLength: options.useSellers ? getSellersLength : getLevLength,\n    shouldUpdateScore: options.useSellers ? sellersUpdateScore : levUpdateScore,\n    shouldContinue: options.useSellers ? sellersShouldContinue : levShouldContinue,\n    walkBack: options.useSellers ? walkBack : noopWalkback,\n    compareItems: getCompareFunc(options.sortBy)\n  }; // walk the trie, scoring and storing the candidates\n\n  const resultMap = {};\n  const results = [];\n  const rows = initMethod(term.length + 1, trie.depth + 1);\n\n  if (options.threshold <= 0 || term.length === 0) {\n    for (const candidate of trie.candidates) {\n      addResult(results, resultMap, candidate, 0, {\n        index: 0,\n        length: 0\n      }, term.length, scoreMethods.compareItems);\n    }\n  }\n\n  searchRecurse(trie, term, scoreMethods, rows, results, resultMap, options);\n  const sorted = results.sort(scoreMethods.compareItems);\n\n  if (options.returnMatchData) {\n    const denormalize = options.useSellers ? denormalizeMatchPosition : noop;\n    return sorted.map(candidate => ({\n      item: candidate.item,\n      original: candidate.normalized.original,\n      key: candidate.normalized.normal.join(\"\"),\n      score: candidate.score,\n      match: denormalize(candidate.match, candidate.normalized.map)\n    }));\n  }\n\n  return sorted.map(candidate => candidate.item);\n} // wrapper for exporting sellers while allowing options to be passed in\n\n\nfunction fuzzy(term, candidate, options) {\n  options = { ...defaultOptions,\n    ...options\n  };\n  const initMethod = options.useSellers ? initSellersRows : initLevRows;\n  const scoreMethod = options.useDamerau ? damerauLevenshtein : levenshtein;\n  const getScore = options.useSellers ? getSellersScore : getLevScore;\n  term = normalize(term, options).normal;\n  const normalized = normalize(candidate, options);\n  const rows = initMethod(term.length + 1, normalized.normal.length + 1);\n\n  for (let j = 0; j < normalized.normal.length; j++) {\n    scoreMethod(term, normalized.normal, rows, j);\n  }\n\n  const scoreResult = getScore(rows, normalized.normal.length + 1);\n  return options.returnMatchData ? {\n    item: candidate,\n    original: normalized.original,\n    key: normalized.normal.join(\"\"),\n    score: scoreResult.score,\n    match: options.useSellers ? denormalizeMatchPosition(walkBack(rows, scoreResult.scoreIndex), normalized.map) : noop()\n  } : scoreResult.score;\n} // simple one-off search. Useful if you don't expect to use the same candidate list again\n\nfunction search(term, candidates, options) {\n  options = { ...defaultOptions,\n    ...options\n  };\n  const trie = {\n    children: {},\n    candidates: [],\n    depth: 0\n  };\n  createSearchTrie(trie, 0, candidates, options);\n  return searchCore(normalize(term, options).normal, trie, options);\n} // class that improves performance of searching the same set multiple times\n// normalizes the strings and caches the result for future calls\n\nclass Searcher {\n  constructor(candidates, options) {\n    this.options = Object.assign({}, defaultOptions, options);\n    this.trie = {\n      children: {},\n      candidates: [],\n      depth: 0\n    };\n    createSearchTrie(this.trie, 0, candidates, this.options);\n    this.count = candidates.length;\n  }\n\n  add(...candidates) {\n    createSearchTrie(this.trie, this.count, candidates, this.options);\n    this.count += candidates.length;\n  }\n\n  search(term, options) {\n    options = Object.assign({}, this.options, options);\n    return searchCore(normalize(term, this.options).normal, this.trie, options);\n  }\n\n}\n\nexport { Searcher, fuzzy, search, sortKind };\n", "export type Content = HTMLElement | string | Content[] | undefined;\n\nconst add = (element: HTMLElement, child: Content) => {\n  if (typeof child === \"string\") {\n    element.appendChild(document.createTextNode(child.toString()));\n  } else if (child instanceof Array) {\n    child.forEach((x) => add(element, x));\n  } else if (child === undefined || child === null) {\n    return;\n  } else {\n    element.appendChild(child);\n  }\n};\n\ntype JSXName<T> = string | ((props: T) => Node);\ntype ElemProps = { [id: string]: string | boolean };\n\nexport class JSX {\n  static createTextNode(t: string): Node {\n    return document.createTextNode(t);\n  }\n\n  static createElement<T>(fn: (props: T) => Node, props: T, ...content: Content[]): Node;\n  static createElement(name: string, props: ElemProps, ...content: Content[]): Node;\n  static createElement<P, T extends JSXName<P>>(\n    name: T,\n    arg: T extends \"string\" ? ElemProps : P,\n    ...content: Content[]\n  ): Node {\n    if (typeof name !== \"string\") {\n      return name(arg);\n    } else {\n      const element = document.createElement(name);\n      const props = (arg as { [id: string]: string | boolean }) || {};\n\n      for (let name in props) {\n        if (name && props.hasOwnProperty(name)) {\n          let value = props[name];\n          if (value === true) {\n            element.setAttribute(name, name);\n          } else if (value !== false && value != null) {\n            element.setAttribute(name, value.toString());\n          }\n        }\n      }\n\n      for (let i = 0; i < content.length; i++) {\n        add(element, content[i]);\n      }\n      return element;\n    }\n  }\n}\n\nexport default JSX;\n", "import { Searcher, MatchData } from \"fast-fuzzy\";\nimport { JSX, Content } from \"./lib/jsx\";\n\ntype SearchItem = {\n  idIdent: string,\n  idAnchor: string,\n  idType: string | null,\n  idDesc: string | null,\n};\n\nconst highlight = ({ match, original }: MatchData<SearchItem>): Content => {\n  if (match.length == 0) return original;\n\n  if (match.index == 0 && match.length == original.length) return <span class=\"search-match\">{original}</span>;\n\n  const out: Array<Content> = [];\n  if (match.index > 0) out.push(original.substring(0, match.index));\n  out.push(<span class=\"search-match\">{original.substring(match.index, match.index + match.length)}</span>);\n  out.push(original.substring(match.index + match.length));\n  return out;\n};\n\nlet loadingIndex = false;\nlet index: Searcher<SearchItem, { returnMatchData: true }> | null;\n\nconst startSearch = (mirrorInput: HTMLInputElement | null) => {\n  if (document.getElementById(\"search-wrapper\")) return;\n\n  const searchInput = <input id=\"search-box\" type=\"text\" placeholder=\"Search...\" autocomplete=\"off\" tabindex=\"0\" /> as HTMLInputElement;\n  const searchResults = <div id=\"search-results\"></div>;\n  const searchWrapper = <div id=\"search-wrapper\" class=\"modal open\">\n    <div class=\"modal-contents search-form\" role=\"form\">\n      {searchInput}\n      {searchResults}\n    </div>\n  </div>;\n\n  const setError = (contents: string) => {\n    searchResults.innerHTML = \"\";\n    searchResults.appendChild(<span class=\"search-error\">{contents}</span>);\n  };\n\n  const doSearch = () => {\n    if (!index) return;\n\n    const results = index.search(searchInput.value);\n\n    if (results.length > 0) {\n      searchResults.scrollTo(0, 0);\n      searchResults.innerHTML = \"\";\n\n      const list = <ul>\n        {results.slice(0, 20).map(match => <li>\n          <a class=\"search-result\" href={`/${match.item.idAnchor}`}>\n            <h3 class=\"sourceCode search-header\">\n              <span>\n                {highlight(match)}\n              </span>\n              <span class=\"search-module\">{match.item.idAnchor.replace(/.html(#.+)?$/, \"\")}</span>\n            </h3>\n            {match.item.idType && <p class=\"search-type sourceCode\">{match.item.idType}</p>}\n            {match.item.idDesc && <p class=\"search-desc\">{match.item.idDesc}</p>}\n          </a>\n        </li>)}\n      </ul>;\n\n\n      searchResults.appendChild(list);\n    } else if (searchInput.value.length === 0) {\n      searchResults.innerHTML = \"\";\n    } else {\n      searchResults.innerText = \"No results found\";\n    }\n  };\n\n  // Input handlers\n\n  searchInput.addEventListener(\"input\", () => {\n    if (mirrorInput) mirrorInput.value = searchInput.value;\n    doSearch();\n  });\n\n  // While searchInputProxy should never be focused for long, let's process those events anyway.\n  const syncMirrorInput = () => {\n    if (mirrorInput) searchInput.value = mirrorInput.value;\n    searchInput.focus();\n    doSearch();\n  };\n  if (mirrorInput) mirrorInput.addEventListener(\"input\", syncMirrorInput);\n\n  const closeSearch = () => {\n    searchWrapper.remove()\n    if (mirrorInput) mirrorInput.removeEventListener(\"input\", syncMirrorInput);\n  };\n\n  searchWrapper.addEventListener(\"click\", e => {\n    if (e.target !== searchInput) closeSearch();\n  });\n\n  // Keyboard navigation through search items\n\n  const removeActive = (elem: Element) => {\n    elem.classList.remove(\"active\");\n    elem.ariaSelected = \"false\";\n  };\n  const addActive = (elem: Element) => {\n    elem.classList.add(\"active\");\n    elem.ariaSelected = \"true\";\n    elem.scrollIntoView({\n      block: \"nearest\",\n    });\n  };\n\n  const moveNext = () => {\n    const active = searchResults.querySelector(\"li.active\");\n    if (!active) {\n      const elem = searchResults.querySelector(\"li\");\n      if (elem) addActive(elem);\n    } else if (active.nextElementSibling) {\n      removeActive(active);\n      addActive(active.nextElementSibling);\n    }\n  };\n\n  const movePrevious = () => {\n    const active = searchResults.querySelector(\"li.active\");\n    if (active && active.previousElementSibling) {\n      removeActive(active);\n      addActive(active.previousElementSibling);\n    }\n  };\n\n  searchInput.addEventListener(\"keydown\", (e) => {\n    switch (e.key) {\n      case \"Tab\":\n        e.preventDefault();\n        if (e.shiftKey) movePrevious(); else moveNext();\n        break;\n\n      case \"Down\":\n      case \"ArrowDown\":\n        e.preventDefault();\n        moveNext();\n        break;\n\n      case \"Up\":\n      case \"ArrowUp\":\n        e.preventDefault();\n        movePrevious();\n        break;\n\n      case \"Enter\": {\n        e.preventDefault();\n\n        const link: HTMLAnchorElement | null =\n          searchResults.querySelector(\"li.active > a\") || searchResults.querySelector(\"li > a\");\n        if (link) link.click();\n        break;\n      }\n\n      case \"Escape\": {\n        e.preventDefault();\n        closeSearch();\n        break;\n      }\n    }\n  });\n\n  document.body.appendChild(searchWrapper);\n  searchInput.focus();\n\n  // Fetch the search index if not available and start searching\n  if (!loadingIndex) {\n    loadingIndex = true;\n    fetch(\"/static/search.json\")\n      .then(r => r.json())\n      .then(entries => {\n        index = new Searcher(entries, {\n          returnMatchData: true,\n          keySelector: (x: SearchItem) => x.idIdent,\n        });\n\n        doSearch();\n      })\n      .catch(e => {\n        console.error(\"Failed to load search index\", e);\n        loadingIndex = false;\n        setError(\"Failed to load search index\");\n      });\n  }\n\n  doSearch();\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // Default pages have a \"search\" box which, when clicked, opens the main search box.\n  const searchInputProxy = document.getElementById(\"search-box-proxy\") as HTMLInputElement | null;\n  if (searchInputProxy) {\n    searchInputProxy.addEventListener(\"focus\", () => startSearch(searchInputProxy));\n  }\n\n  // Allow pressing Ctrl+K to search anywhere.\n  document.addEventListener(\"keydown\", e => {\n    if (e.key == \"k\" && e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      startSearch(searchInputProxy);\n    }\n  });\n});\n"],
  "mappings": "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",
  "names": []
}
